language: node_js
sudo: required
dist: trusty

# Block list
branches:
  except:
    - gh-pages # will be deployed to, no need to build it

cache:
  directories:
    - node_modules

before_install:
    # const
    - export PACKAGE_NAME=$(node -p "require('./package.json').name")
    - export PACKAGE_VERSION=$(node -p "require('./package.json').version")
    - export NODE_VERSION=$(node --version)
    - export NPM_VERSION=$(npm --version)
    # logging
    - npm --version || echo npm not installed
    - node --version|| echo node not installed
    - echo "package version $PACKAGE_VERSION"
    - node --version
    - npm --version
    - npm install -g npm@6.2.0
    - npm --version
    - ls package-lock.json
    - npm ci || cat /home/travis/.npm/_logs/*-debug.log

stages:
  - build
  - test
  - release
  - deploy

jobs:
  include:
    # Job: Build
    - stage: build
      if: branch IN (dev, master)
      node_js:
       # - 'lts/*'
       - '10.3'
       # - '8'
      script:
        - npm install
        - npm run build
    # Job: Test
    - stage: test
      if: branch IN (dev, master)
      node_js:
        # - 'lts/*'
        - '10.3'
        # - '8'
      script:
        - npm run test

    # Job: Release
    - stage: release
      if: branch = master
      node_js:
        # - 'lts/*'
        - '10.3'
      skip_cleanup: true
      script:
        - npm install
        - npx semantic-release

    # Job: Page
    - stage: deploy
      if: branch = master
      node_js:
        # - 'lts/*'
        - '10.3'
      script:
        - git fetch --tags
        - PACKAGE_VERSION=$(git describe --tags | awk -F '-' '{print $1}')
        - git checkout refs/tags/${PACKAGE_VERSION}
        - PACKAGE_VERSION=$(node -p "require('./package.json').version")
        - npm install
        # Replace variables
        - ./styleguide/prepare.sh
        - npm run styleguide:build
      deploy:
        - provider: pages
          skip_cleanup: true
          github_token: $GH_TOKEN  # Set in the settings page of your repository, as a secure variable
          keep_history: true
          local_dir: public/
